:root {
  --white: rgb(255, 255, 255);
  --black: rgb(0, 0, 0);
  --chartreuse: rgb(204, 255, 0);
  @supports (color: color(display-p3 1 1 1)) {
    --white: color(display-p3 1 1 1 / 1);
    --black: color(display-p3 0 0 0 / 1);
    --chartreuse: color(display-p3 0.8 1 0 / 1);
  }

  --clr-bg: var(--white);
  --clr-fg: var(--black);
  --clr-brdr: var(--black);

  --clr-bg2: rgb(248, 248, 248);
  --clr-fg2: rgb(157, 157, 157);
  --clr-brdr2: rgb(217, 217, 217);

  --clr-hl: var(--chartreuse);
  --main-box-shadow: 0px 4px 10px 0px var(--clr-hl);

  --font-sans: "Helvetica Neue", Helvetica, Arial, sans-serif;
  --font-serif: "TO Leaf", "Times New Roman", Times, serif;
  --font-serif-kr: "Noto Serif KR", var(--font-serif);

  --page-padding: 1.25rem;

  --max-content-width: 700px;

  $fontSizeMin: 2rem;
  $fontSizeMax: 4.5rem;
  --header-font-size: #{max($fontSizeMin, min(6vw, $fontSizeMax))};
}

// These are some cool new CSS Houdini things enabling us to animate the colors
// across the entire page. @property is currently unsupported by Firefox, but
// we fallback to the correct behavior anyways.

@property --clr-bg {
  syntax: "<color>";
  initial-value: rgb(255, 255, 255);
  inherits: true;
}

@property --clr-bg2 {
  syntax: "<color>";
  initial-value: rgb(248, 248, 248);
  inherits: true;
}

@property --clr-hl {
  syntax: "<color>";
  initial-value: rgb(204, 255, 0);
  inherits: true;
}
