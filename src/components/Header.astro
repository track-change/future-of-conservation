---
import { localizedQuery, siteHeaderQuery } from "@/queries/contentQueries";
import Link from "@/components/Link.astro";
import { astroI18n, l, t } from "astro-i18n";
import type { SiteHeader } from "@/sanity";

const { locale, route } = astroI18n;
const header = await localizedQuery<SiteHeader>(Astro)(siteHeaderQuery);
---

<header id="header">
  <h1>
    <a href={l("/")}>
      Future of <br />Conservation
    </a>
  </h1>
</header>
<nav aria-label="Main" id="navbar">
  <ul class="grid">
    {
      header.navItems?.map((link) => (
        <li class="navlink">
          <Link link={link} withAriaCurrent class="hoverable" />
        </li>
      ))
    }
    <li class="lang">
      <a
        aria-description="View this page in Korean"
        href={l(route, undefined, { targetLocale: "kr" })}
        aria-current={locale === "kr" ? "page" : undefined}
        class="hoverable"
      >
        KR
      </a>
    </li>
    <li class="lang">
      <a
        aria-description="View this page in English"
        href={l(route, undefined, { targetLocale: "en" })}
        aria-current={locale === "en" ? "page" : undefined}
        class="hoverable"
      >
        EN
      </a>
    </li>
  </ul>
</nav>

<script>
  const navBar = document.querySelector<HTMLDivElement>("#navbar")!;
  const header = document.querySelector<HTMLDivElement>("#header")!;
  const threshold = header.getBoundingClientRect().bottom;
  window.addEventListener("scroll", () => {
    if (window.scrollY > threshold) {
      navBar.classList.add("scrolled");
    } else {
      navBar.classList.remove("scrolled");
    }
  });
</script>

<style lang="scss">
  $headerLineHeight: 0.66;
  $headerPadding: 0.9;

  nav {
    width: 100%;
    overflow-x: hidden;
    position: sticky;
    top: calc(0.5 * var(--page-padding));
    z-index: 9999;
    padding-bottom: 10px;
    margin-bottom: -10px;
  }

  h1 {
    font-size: var(--header-font-size);
    padding: $headerPadding * 1em 0;

    text-transform: uppercase;
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;

    & a {
      display: block;
      width: min-content;
      height: fit-content;
      margin: 0 auto;
    }
  }

  ul {
    position: relative;
    text-transform: uppercase;
    background-color: var(--clr-bg);
    display: flex;
    flex-wrap: wrap;
    margin: 0 auto;
    transition:
      width 0.3s ease-in-out,
      box-shadow 0.3s ease-in-out;

    &::before {
      content: "";
      width: 1px;
      height: 1px;
      position: absolute;
      top: -1px;
      left: -1px;
      background-color: var(--clr-brdr);
    }

    .scrolled > & {
      width: calc(100% + 2px - var(--page-padding));
      box-shadow: 0px 2px 4px 0px var(--clr-hl);

      @media screen and (min-width: 768px) {
        width: calc(100% + 2px - 2 * var(--page-padding));
      }
    }
  }

  li {
    height: 1.75em;
  }

  .navlink {
    flex: 1;

    @media screen and (max-width: 768px) {
      &:nth-child(1),
      &:nth-child(2) {
        min-width: 50%;
      }
    }
  }

  .lang {
  }

  a {
    height: 100%;
    display: flex;
    text-align: center;
    justify-content: center;
    align-items: center;
    white-space: nowrap;
    padding: 0 0.5em;

    &[aria-current="page"] {
      background-color: var(--clr-hl);
    }
  }
</style>
