---
import Link from "@/components/Link.astro";
import type { Page } from "@/sanity";
import { resolveReference } from "@/utils/resolveLinks";
import { t } from "astro-i18n";
interface Props {
  recirc: NonNullable<Page["recirculation"]>;
}

const { recirc } = Astro.props;
---

<aside>
  <h2 class="header-reset">See Also</h2>
  <ul class="grid">
    {
      recirc.map((link) => {
        let overText = "";
        let underText = "Read More";
        switch (link._type) {
          case "internalLink": {
            const target = resolveReference(link.linkTarget);
            overText = target._type;
            if (target._type.startsWith("page")) {
              overText = "Visit";
            } else if (
              target._type === "artist" &&
              link.subpath === "/interview"
            ) {
              overText = "Interview";
            } else if (target._type === "article") {
              underText = "View PDF";
            }
            break;
          }
        }
        return (
          <li>
            <p>{overText || <>&nbsp;</>}</p>
            <Link link={link} class="Recirc_link" />
            <p>{underText || <>&nbsp;</>}</p>
          </li>
        );
      })
    }
  </ul>
</aside>

<style lang="scss">
  aside {
    margin-bottom: -1px;
  }

  h2 {
    text-transform: uppercase;
    padding: var(--page-padding);
    font-family: var(--font-sans);
  }

  ul {
    display: flex;
    flex-wrap: wrap;
  }

  li {
    flex: 1;
    min-width: 300px;
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    text-align: center;
    padding: var(--page-padding);
    gap: 3em;
  }

  p {
    z-index: 1;
    pointer-events: none;
    text-transform: uppercase;
    font-size: 0.875rem;
  }

  .Recirc_link {
    font-size: max(2rem, min(6vw, 3.75rem));
    line-break: auto;
    word-wrap: break-word;
    -ms-hyphens: auto;
    -webkit-hyphens: auto;
    hyphens: auto;
    z-index: 0;
    font-family: var(--font-serif);

    &::before {
      position: absolute;
      inset: 0;
      content: "";
      z-index: -1;
    }

    &:hover::before,
    &:focus-visible::before {
      background-color: var(--clr-hl);
    }
  }
</style>
