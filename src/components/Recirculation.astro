---
import Link from "@/components/Link.astro";
import type { Page } from "@/sanity";
import { t } from "astro-i18n";
interface Props {
  recirc: NonNullable<Page["recirculation"]>;
}

const { recirc } = Astro.props;
---

<aside>
  <h2>{t("recirc")}</h2>
  <ul>
    {
      recirc.map((panel) => {
        return (
          <li>
            <p>{panel.overtext || <>&nbsp;</>}</p>
            {panel.targetInternal && (
              <Link link={panel.targetInternal} class="Recirc_link" />
            )}
            <p>{panel.undertext || <>&nbsp;</>}</p>
          </li>
        );
      })
    }
  </ul>
</aside>

<style lang="scss">
  h2 {
    text-align: center;
    padding: 1em 0;
    text-transform: uppercase;
  }

  ul {
    display: flex;
    flex-wrap: wrap;
    width: 100%;
  }

  li {
    flex: 1;
    min-width: 200px;
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    text-align: center;
    padding: 1em;
    gap: 3em;
  }

  p {
    z-index: 1;
    pointer-events: none;
  }

  .Recirc_link {
    font-size: min(8vw, 6rem);
    text-transform: uppercase;
    letter-spacing: -0.07em;
    line-height: 0.66;
    line-break: auto;
    word-wrap: break-word;
    -ms-hyphens: auto;
    -webkit-hyphens: auto;
    hyphens: auto;
    z-index: 0;

    &::before {
      position: absolute;
      inset: 0;
      content: "";
      z-index: -1;
      transition: all 0.2s ease-in-out;
      transform: scaleY(0);
      background: linear-gradient(180deg, #ffffff 0%, #ccff00 34%);
      transform-origin: 50% 100%;
      opacity: 0;
    }

    &:hover::before,
    &:focus-visible::before {
      transform: scaleY(1);
      opacity: 1;
    }

    &::after {
      position: absolute;
      inset: 0;
      content: "";
    }
  }
</style>
