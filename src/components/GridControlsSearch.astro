---
interface Props {
  ariaControls?: string;
}

const { ariaControls } = Astro.props;
---

<form
  id="search-control"
  class="SearchControl"
  role="search"
  aria-label="Search contents on this page"
  aria-controls={ariaControls}
>
  <label for="search-input">Search</label>
  <input type="search" id="search-input" name="search" spellcheck="false" />
  <!-- <input value="Submit" type="submit" /> -->
</form>

<slot />

<script>
  import Fuse from "fuse.js";

  const search = document.querySelector<HTMLInputElement>("#search-input")!;
  const targets = document.querySelectorAll<HTMLLIElement>(".search-target");
  const searchMap = [];
  for (const target of targets) {
    searchMap.push({
      title: target.querySelector<HTMLHeadingElement>("h1")?.innerText || "",
      byline: target.querySelector<HTMLHeadingElement>("h2")?.innerText || "",
      id: target.id,
    });
  }

  const fuse = new Fuse(searchMap, { keys: ["title", "byline"] });
  function updateSearch() {
    if (!search.value.length) {
      targets.forEach((t) => {
        t.style.display = "";
      });
      return;
    }
    targets.forEach((t) => {
      t.style.display = "none";
    });
    const results = fuse.search(search.value);
    results.forEach((t) => {
      const el = document.getElementById(t.item.id);
      if (el) el.style.display = "";
    });
  }
  search.addEventListener("input", updateSearch);
</script>

<style lang="scss">
  .SearchControl {
    display: flex;
    gap: var(--page-padding);
    font-size: 0.875rem;
    padding: calc(0.75 * var(--page-padding)) var(--page-padding);
    counter-reset: search;
    align-items: center;

    @media screen and (min-width: 768px) {
      padding: calc(0.75 * var(--page-padding)) calc(2 * var(--page-padding));
    }
  }

  label {
    display: block;
    text-transform: uppercase;
  }

  #search-input {
    flex: 1;
  }
</style>
