---
import type { Article, Artist, InternalLink, Link } from "@/sanity";
import { resolveLinkURL, resolveReference } from "@/utils/resolveLinks";
import { astroI18n, l } from "astro-i18n";
import type { HTMLAttributes } from "astro/types";

interface Props extends HTMLAttributes<"a"> {
  link: InternalLink | Link | Artist | Article;
  withAriaCurrent?: boolean;
}

const { link, withAriaCurrent, ...rest } = Astro.props;
const { route } = astroI18n;

let title: string | undefined = undefined;
const aProps = { ...rest };
switch (link._type) {
  case "artist": {
    const href = resolveLinkURL(link);
    aProps.href = astroI18n.l(href);
    title = link.title;
    break;
  }
  case "article": {
    aProps.href = resolveReference(link.file.asset).url;
    break;
  }
  case "internalLink": {
    const target = resolveReference(link.linkTarget);
    const hrefRaw = resolveLinkURL(target);
    if (!hrefRaw) break;
    aProps.href = astroI18n.l(hrefRaw);
    if (withAriaCurrent && route !== "/" && hrefRaw.startsWith(route))
      aProps["aria-current"] = "page";
    title = link.title || target.title;
    break;
  }
  case "link": {
    aProps.href = link.href;
    aProps.target = link.blank ? "_blank" : undefined;
    aProps.rel = "noopener noreferrer";
    title = link.title || link.href;
    break;
  }
}
---

<a {...aProps}>
  <slot>
    {title}
  </slot>
</a>
