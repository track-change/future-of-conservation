---
import Recirculation from "@/components/Recirculation.astro";
import RootLayout from "@/layouts/RootLayout.astro";
import { sanityClient } from "sanity:client";
import type { Artist } from "@/sanity";
import {
  localizedQuery,
  artistIntroQuery,
  artistSlugsQuery,
  type ArtistIntroQueryType,
} from "@/queries/contentQueries";
import { astroI18n, createGetStaticPaths } from "astro-i18n";
import Text from "@/components/Text.astro";
import ArticleLayout from "@/layouts/ReadableLayout.astro";

export const getStaticPaths = createGetStaticPaths(async () => {
  const slugs =
    await sanityClient.fetch<{ artistSlug: string }[]>(artistSlugsQuery);
  return slugs.map(({ artistSlug }) => ({ params: { artistSlug } }));
});

const { artistSlug: slug } = Astro.params as { artistSlug: string };
const artist = await localizedQuery<ArtistIntroQueryType>(Astro)(
  artistIntroQuery,
  { slug },
);
if (!artist) {
  astroI18n.redirect("/404");
}
---

{
  artist && (
    <RootLayout>
      <ArticleLayout>
        <h1 lang={artist.titleLang}>{artist.title}</h1>
        <div class="passthrough" lang={artist.introductionContentLang}>
          <Text content={artist.introductionContent} />
        </div>
      </ArticleLayout>
      {artist.introductionRecirc && (
        <Recirculation recirc={artist?.introductionRecirc} />
      )}
    </RootLayout>
  )
}

<style lang="scss">
  h1 {
    font-size: 3.75rem;
    text-align: center;
    margin: 1.1em 0 2.5em;
    text-transform: uppercase;
  }
</style>
