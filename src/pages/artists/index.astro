---
import RootLayout from "@/layouts/RootLayout.astro";
import { astroI18n } from "astro-i18n";
import type { Artist } from "@/sanity";
import { localizedQuery, artistsQuery } from "@/queries/contentQueries";
import Link from "@/components/Link.astro";
import { miniSlugify } from "@/utils/helperFunctions";
import FilterGridControls from "@/components/FilterGridControls.astro";

const artists = await localizedQuery<Artist[]>(artistsQuery);
const possibleTags = artists
  .flatMap(({ artistTags }) => artistTags)
  .filter((x) => !!x);
---

<RootLayout>
  <FilterGridControls tags={possibleTags} ariaControls="artists">
    <ul id="artists">
      {
        artists.map((artist) => (
          <li
            class="filter-target"
            data-tags={`[${
              artist.artistTags
                ?.map(
                  ({ value }: { value: string }) => `"${miniSlugify(value)}"`,
                )
                .join(",") || ""
            }]`}
          >
            <Link link={artist} />
          </li>
        ))
      }
    </ul>
  </FilterGridControls>
</RootLayout>

<style lang="scss">
  ul {
    width: 100%;
    display: grid;
    grid-template-columns: 1fr;
    padding: 1rem;
    padding-top: 0;
    column-gap: 1rem;

    @media screen and (min-width: 768px) {
      grid-template-columns: repeat(2, 1fr);
    }

    & a {
      display: flex;
      min-height: 3em;
      font-size: 8vw;
      padding: 1rem;
      width: 100%;
      line-height: 0.66;
      text-transform: uppercase;
      border-bottom: 1px solid var(--clr-fg);
      text-align: center;
      align-items: center;
      justify-content: center;

      @media screen and (min-width: 768px) {
        font-size: 4vw;
      }

      &:hover,
      &:focus-visible {
        background-color: var(--clr-hl);
      }
      /* word-wrap: break-word;
    -ms-hyphens: auto;
    -webkit-hyphens: auto;
    hyphens: auto; */
    }
  }

  li {
    &:nth-child(1) {
      border-top: 1px solid var(--clr-fg);
    }
    @media screen and (min-width: 768px) {
      &:nth-child(2) {
        border-top: 1px solid var(--clr-fg);
      }
    }
  }
</style>
