---
import RootLayout from "@/layouts/RootLayout.astro";
import type { Artist } from "@/sanity";
import {
  localizedQuery,
  artistsQuery,
  type ArtistsQueryType,
} from "@/queries/contentQueries";
import Link from "@/components/Link.astro";
import { miniSlugify } from "@/utils/helperFunctions";
import FilterGridControls from "@/components/FilterGridControls.astro";

const artists = await localizedQuery<ArtistsQueryType>(Astro)(artistsQuery);
const possibleTags = artists
  .flatMap(({ artistTags }) => artistTags)
  .filter((x) => !!x);
---

<RootLayout>
  <FilterGridControls tags={possibleTags} ariaControls="artists">
    <div>
      <ul id="artists" class="grid">
        {
          artists.map((artist) => (
            <li
              class="filter-target"
              data-tags={`[${
                artist.artistTags
                  ?.map(
                    ({ value }: { value: string }) => `"${miniSlugify(value)}"`,
                  )
                  .join(",") || ""
              }]`}
            >
              <h4 lang={artist.titleLang}>
                <Link link={artist} data-astro-prefetch="viewport" />
              </h4>
            </li>
          ))
        }
      </ul>
    </div>
  </FilterGridControls>
</RootLayout>

<style lang="scss">
  div {
    min-height: 60vh;
  }
  ul {
    display: grid;
    grid-template-columns: 1fr;

    @media screen and (min-width: 768px) {
      grid-template-columns: repeat(2, 1fr);
    }

    & a {
      display: flex;
      min-height: 3em;
      font-size: 8vw;
      padding: 1rem;
      width: 100%;
      text-transform: uppercase;
      text-align: center;
      align-items: center;
      justify-content: center;

      @media screen and (min-width: 768px) {
        font-size: 4vw;
      }

      &:hover,
      &:focus-visible {
        background-color: var(--clr-hl);
      }
      /* word-wrap: break-word;
    -ms-hyphens: auto;
    -webkit-hyphens: auto;
    hyphens: auto; */
    }
  }
</style>
